# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --configuration Release --no-restore
      
    - name: Test
      run: dotnet test --no-restore --verbosity normal
      
    - name: Prepare test directory
      run: mkdir output

#    - name: Publish for win-x86
#      run: >
#        dotnet publish FileHasher.CLI/FileHasher.CLI.csproj  --configuration Release --runtime win-x86 --self-contained true --output output/win-x86/ \
#        && dotnet publish FileHasher.CLI.Check/FileHasher.CLI.Check.csproj  --configuration Release --runtime win-x86 --self-contained true --output output/win-x86/ \
#        && dotnet publish FileHasher.CLI.Hash/FileHasher.CLI.Hash.csproj  --configuration Release --runtime win-x86 --self-contained true --output output/win-x86/
#
#    - name: Publish for win-x64
#      run: >
#        dotnet publish FileHasher.CLI/FileHasher.CLI.csproj  --configuration Release --runtime win-x64 --self-contained true --output output/win-x64/ \
#        && dotnet publish FileHasher.CLI.Check/FileHasher.CLI.Check.csproj  --configuration Release --runtime win-x64 --self-contained true --output output/win-x64/ \
#        && dotnet publish FileHasher.CLI.Hash/FileHasher.CLI.Hash.csproj  --configuration Release --runtime win-x64 --self-contained true --output output/win-x64/
#    
#    - name: Publish for win-arm
#      run: >
#        dotnet publish FileHasher.CLI/FileHasher.CLI.csproj  --configuration Release --runtime win-arm --self-contained true --output output/win-arm/ \
#        && dotnet publish FileHasher.CLI.Check/FileHasher.CLI.Check.csproj  --configuration Release --runtime win-arm --self-contained true --output output/win-arm/ \
#        && dotnet publish FileHasher.CLI.Hash/FileHasher.CLI.Hash.csproj  --configuration Release --runtime win-arm --self-contained true --output output/win-arm/
#    
#    - name: Publish for win-arm64
#      run: >
#        dotnet publish FileHasher.CLI/FileHasher.CLI.csproj  --configuration Release --runtime win-arm64 --self-contained true --output output/win-arm64/ \
#        && dotnet publish FileHasher.CLI.Check/FileHasher.CLI.Check.csproj  --configuration Release --runtime win-arm64 --self-contained true --output output/win-arm64/ \
#        && dotnet publish FileHasher.CLI.Hash/FileHasher.CLI.Hash.csproj  --configuration Release --runtime win-arm64 --self-contained true --output output/win-arm64/
#    
#    - name: Publish for linux-x64
#      run: >
#        dotnet publish FileHasher.CLI/FileHasher.CLI.csproj  --configuration Release --runtime linux-x64 --self-contained true --output output/linux-x64/ \
#        && dotnet publish FileHasher.CLI.Check/FileHasher.CLI.Check.csproj  --configuration Release --runtime linux-x64 --self-contained true --output output/linux-x64/ \
#        && dotnet publish FileHasher.CLI.Hash/FileHasher.CLI.Hash.csproj  --configuration Release --runtime linux-x64 --self-contained true --output output/linux-x64/
#    
#    - name: Publish for linux-arm
#      run: >
#        dotnet publish FileHasher.CLI/FileHasher.CLI.csproj  --configuration Release --runtime linux-arm --self-contained true --output output/linux-arm/ \
#        && dotnet publish FileHasher.CLI.Check/FileHasher.CLI.Check.csproj  --configuration Release --runtime linux-arm --self-contained true --output output/linux-arm/ \
#        && dotnet publish FileHasher.CLI.Hash/FileHasher.CLI.Hash.csproj  --configuration Release --runtime linux-arm --self-contained true --output output/linux-arm/
#    
#    - name: Publish for linux-arm64
#      run: >
#        dotnet publish FileHasher.CLI/FileHasher.CLI.csproj  --configuration Release --runtime linux-arm64 --self-contained true --output output/linux-arm64/ \
#        && dotnet publish FileHasher.CLI.Check/FileHasher.CLI.Check.csproj  --configuration Release --runtime linux-arm64 --self-contained true --output output/linux-arm64/ \
#        && dotnet publish FileHasher.CLI.Hash/FileHasher.CLI.Hash.csproj  --configuration Release --runtime linux-arm64 --self-contained true --output output/linux-arm64/
    
    - name: Publish for osx-x64
      run: >
        dotnet publish FileHasher.CLI/FileHasher.CLI.csproj  --configuration Release --runtime osx-x64 --self-contained true --output output/osx-x64/
        && dotnet publish FileHasher.CLI.Check/FileHasher.CLI.Check.csproj  --configuration Release --runtime osx-x64 --self-contained true --output output/osx-x64/ \
        && dotnet publish FileHasher.CLI.Hash/FileHasher.CLI.Hash.csproj  --configuration Release --runtime osx-x64 --self-contained true --output output/osx-x64/

    - name: Remove .pdb files
      run: rm output/*/*.pdb
      
#    - name: Zip published files
#      run: for i in output/*/; do zip --junk-paths --recurse-paths --move --test "${i%/}.zip" "$i"; done

#    - uses: actions/upload-artifact@v3
#      name: Upload artifacts for win-x86
#      with:
#        name: win-x86
#        path: output/win-x86/
#        retention-days: 7
#
#    - uses: actions/upload-artifact@v3
#      name: Upload artifacts for win-x64
#      with:
#        name: win-x64
#        path: output/win-x64/
#        retention-days: 7
#
#    - uses: actions/upload-artifact@v3
#      name: Upload artifacts for win-arm
#      with:
#        name: win-arm
#        path: output/win-arm/
#        retention-days: 7
#
#    - uses: actions/upload-artifact@v3
#      name: Upload artifacts for win-arm64
#      with:
#        name: win-arm64
#        path: output/win-arm64/
#        retention-days: 7
#
#    - uses: actions/upload-artifact@v3
#      name: Upload artifacts for linux-x64
#      with:
#        name: linux-x64
#        path: output/linux-x64/
#        retention-days: 7
#
#    - uses: actions/upload-artifact@v3
#      name: Upload artifacts for linux-arm
#      with:
#        name: linux-arm
#        path: output/linux-arm/
#        retention-days: 7
#
#    - uses: actions/upload-artifact@v3
#      name: Upload artifacts for linux-arm64
#      with:
#        name: linux-arm64
#        path: output/linux-arm64/
#        retention-days: 7

    - uses: actions/upload-artifact@v3
      name: Upload artifacts for osx-x64
      with:
        name: osx-x64
        path: output/osx-x64/
        retention-days: 7