# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
    
    # Publish semver tags as releases.
    tags: [ 'v*' ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        fetch-tags: true
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Extract version from last tag
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      id: get_last_tag
      run: |
        TAG=$(git describe --tags --abbrev=0 --match "v*.*.*" || echo "")
        # Extract base version (v1.2.0 from v1.2.0-beta.2 or v1.2.0)
        BASE_TAG=$(echo "$TAG" | grep -oE '^v[0-9]+\.[0-9]+\.[0-9]+')
        # Get short git hash
        GIT_HASH=$(git rev-parse --short HEAD)
        # Compose version string
        if [ -n "$BASE_TAG" ]; then
          VERSION="${BASE_TAG}-next+${GIT_HASH}"
        else
          VERSION="0.0.0-next+${GIT_HASH}"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "Calculated version is: $VERSION"

    - name: Extract version from tag
      if: startsWith(github.ref, 'refs/tags/')
      id: get_version
      run: |
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
          echo "Calculated version is: $VERSION"
        
    - name: Restore dependencies
      run: dotnet restore /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }}
      
    - name: Build
      run: dotnet build --configuration Release --no-restore /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }}
      
    - name: Test
      run: dotnet test --no-restore --verbosity normal
      
    - name: Prepare test directory
      run: mkdir output

    - name: Publish for win-x86
      if: startsWith(github.ref, 'refs/tags/')
      run: >
        dotnet publish FileHasher.CLI/FileHasher.CLI.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-x86 --self-contained true --output output/win-x86/;
        dotnet publish FileHasher.CLI.Check/FileHasher.CLI.Check.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-x86 --self-contained true --output output/win-x86/;
        dotnet publish FileHasher.CLI.Hash/FileHasher.CLI.Hash.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-x86 --self-contained true --output output/win-x86/

    - name: Publish for win-x86-gui
      if: startsWith(github.ref, 'refs/tags/')
      run: >
        dotnet publish FileHasher.GUI.WinForms/FileHasher.GUI.WinForms.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-x86 --self-contained true --output output/win-x86-gui/

    - name: Publish for win-x64
      if: startsWith(github.ref, 'refs/tags/')
      run: >
        dotnet publish FileHasher.CLI/FileHasher.CLI.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-x64 --self-contained true --output output/win-x64/;
        dotnet publish FileHasher.CLI.Check/FileHasher.CLI.Check.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-x64 --self-contained true --output output/win-x64/;
        dotnet publish FileHasher.CLI.Hash/FileHasher.CLI.Hash.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-x64 --self-contained true --output output/win-x64/

    - name: Publish for win-x64-gui
      run: >
        dotnet publish FileHasher.GUI.WinForms/FileHasher.GUI.WinForms.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-x64 --self-contained true --output output/win-x64-gui/

    - name: Publish for win-arm64
      if: startsWith(github.ref, 'refs/tags/')
      run: >
        dotnet publish FileHasher.CLI/FileHasher.CLI.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-arm64 --self-contained true --output output/win-arm64/;
        dotnet publish FileHasher.CLI.Check/FileHasher.CLI.Check.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-arm64 --self-contained true --output output/win-arm64/;
        dotnet publish FileHasher.CLI.Hash/FileHasher.CLI.Hash.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-arm64 --self-contained true --output output/win-arm64/

    - name: Publish for win-arm64-gui
      if: startsWith(github.ref, 'refs/tags/')
      run: >
        dotnet publish FileHasher.GUI.WinForms/FileHasher.GUI.WinForms.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-arm64 --self-contained true --output output/win-arm64-gui/

    - name: Publish for linux-x64
      if: startsWith(github.ref, 'refs/tags/')
      run: >
        dotnet publish FileHasher.CLI/FileHasher.CLI.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime linux-x64 --self-contained true --output output/linux-x64/;
        dotnet publish FileHasher.CLI.Check/FileHasher.CLI.Check.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime linux-x64 --self-contained true --output output/linux-x64/;
        dotnet publish FileHasher.CLI.Hash/FileHasher.CLI.Hash.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime linux-x64 --self-contained true --output output/linux-x64/

    - name: Publish for linux-arm
      if: startsWith(github.ref, 'refs/tags/')
      run: >
        dotnet publish FileHasher.CLI/FileHasher.CLI.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime linux-arm --self-contained true --output output/linux-arm/;
        dotnet publish FileHasher.CLI.Check/FileHasher.CLI.Check.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime linux-arm --self-contained true --output output/linux-arm/;
        dotnet publish FileHasher.CLI.Hash/FileHasher.CLI.Hash.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime linux-arm --self-contained true --output output/linux-arm/

    - name: Publish for linux-arm64
      if: startsWith(github.ref, 'refs/tags/')
      run: >
        dotnet publish FileHasher.CLI/FileHasher.CLI.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime linux-arm64 --self-contained true --output output/linux-arm64/;
        dotnet publish FileHasher.CLI.Check/FileHasher.CLI.Check.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime linux-arm64 --self-contained true --output output/linux-arm64/;
        dotnet publish FileHasher.CLI.Hash/FileHasher.CLI.Hash.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime linux-arm64 --self-contained true --output output/linux-arm64/
    
    - name: Publish for osx-x64
      if: startsWith(github.ref, 'refs/tags/')
      run: >
        dotnet publish FileHasher.CLI/FileHasher.CLI.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime osx-x64 --self-contained true --output output/osx-x64/;
        dotnet publish FileHasher.CLI.Check/FileHasher.CLI.Check.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime osx-x64 --self-contained true --output output/osx-x64/;
        dotnet publish FileHasher.CLI.Hash/FileHasher.CLI.Hash.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime osx-x64 --self-contained true --output output/osx-x64/

            
    - name: Publish for osx-arm64
      if: startsWith(github.ref, 'refs/tags/')
      run: >
        dotnet publish FileHasher.CLI/FileHasher.CLI.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime osx-arm64 --self-contained true --output output/osx-arm64/;
        dotnet publish FileHasher.CLI.Check/FileHasher.CLI.Check.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime osx-arm64 --self-contained true --output output/osx-arm64/;
        dotnet publish FileHasher.CLI.Hash/FileHasher.CLI.Hash.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime osx-arm64 --self-contained true --output output/osx-arm64/

    - name: Remove .pdb files
      if: startsWith(github.ref, 'refs/tags/')
      run: rm output/*/*.pdb
      
    - name: Publish for win-x86-full
      if: startsWith(github.ref, 'refs/tags/')
      run: >
        dotnet publish FileHasher.CLI/FileHasher.CLI.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-x86 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/win-x86-full/;
        dotnet publish FileHasher.CLI.Check/FileHasher.CLI.Check.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-x86 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/win-x86-full/;
        dotnet publish FileHasher.CLI.Hash/FileHasher.CLI.Hash.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-x86 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/win-x86-full/

    - name: Publish for win-x86-gui-full
      if: startsWith(github.ref, 'refs/tags/')
      run: >
        dotnet publish FileHasher.CLI/FileHasher.CLI.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-x86 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/win-x86-gui-full/;
        dotnet publish FileHasher.CLI.Check/FileHasher.CLI.Check.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-x86 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/win-x86-gui-full/;
        dotnet publish FileHasher.CLI.Hash/FileHasher.CLI.Hash.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-x86 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/win-x86-gui-full/;
        dotnet publish FileHasher.GUI.WinForms/FileHasher.GUI.WinForms.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-x86 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/win-x86-gui-full/

    - name: Publish for win-x64-full
      run: >
        dotnet publish FileHasher.CLI/FileHasher.CLI.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-x64 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/win-x64-full/;
        dotnet publish FileHasher.CLI.Check/FileHasher.CLI.Check.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-x64 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/win-x64-full/;
        dotnet publish FileHasher.CLI.Hash/FileHasher.CLI.Hash.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-x64 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/win-x64-full/

    - name: Publish for win-x64-gui-full
      run: >
        dotnet publish FileHasher.CLI/FileHasher.CLI.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-x64 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/win-x64-gui-full/;
        dotnet publish FileHasher.CLI.Check/FileHasher.CLI.Check.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-x64 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/win-x64-gui-full/;
        dotnet publish FileHasher.CLI.Hash/FileHasher.CLI.Hash.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-x64 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/win-x64-gui-full/;
        dotnet publish FileHasher.GUI.WinForms/FileHasher.GUI.WinForms.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-x64 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/win-x64-gui-full/

    - name: Publish for win-arm64-full
      if: startsWith(github.ref, 'refs/tags/')
      run: >
        dotnet publish FileHasher.CLI/FileHasher.CLI.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-arm64 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/win-arm64-full/;
        dotnet publish FileHasher.CLI.Check/FileHasher.CLI.Check.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-arm64 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/win-arm64-full/;
        dotnet publish FileHasher.CLI.Hash/FileHasher.CLI.Hash.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-arm64 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/win-arm64-full/

    - name: Publish for win-arm64-gui-full
      if: startsWith(github.ref, 'refs/tags/')
      run: >
        dotnet publish FileHasher.CLI/FileHasher.CLI.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-arm64 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/win-arm64-gui-full/;
        dotnet publish FileHasher.CLI.Check/FileHasher.CLI.Check.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-arm64 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/win-arm64-gui-full/;
        dotnet publish FileHasher.CLI.Hash/FileHasher.CLI.Hash.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-arm64 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/win-arm64-gui-full/;
        dotnet publish FileHasher.GUI.WinForms/FileHasher.GUI.WinForms.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime win-arm64 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/win-arm64-gui-full/

    - name: Publish for linux-x64-full
      run: >
        dotnet publish FileHasher.CLI/FileHasher.CLI.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime linux-x64 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/linux-x64-full/;
        dotnet publish FileHasher.CLI.Check/FileHasher.CLI.Check.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime linux-x64 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/linux-x64-full/;
        dotnet publish FileHasher.CLI.Hash/FileHasher.CLI.Hash.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime linux-x64 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/linux-x64-full/

    - name: Publish for linux-arm-full
      if: startsWith(github.ref, 'refs/tags/')
      run: >
        dotnet publish FileHasher.CLI/FileHasher.CLI.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime linux-arm --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/linux-arm-full/;
        dotnet publish FileHasher.CLI.Check/FileHasher.CLI.Check.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime linux-arm --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/linux-arm-full/;
        dotnet publish FileHasher.CLI.Hash/FileHasher.CLI.Hash.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime linux-arm --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/linux-arm-full/

    - name: Publish for linux-arm64-full
      if: startsWith(github.ref, 'refs/tags/')
      run: >
        dotnet publish FileHasher.CLI/FileHasher.CLI.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime linux-arm64 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/linux-arm64-full/;
        dotnet publish FileHasher.CLI.Check/FileHasher.CLI.Check.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime linux-arm64 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/linux-arm64-full/;
        dotnet publish FileHasher.CLI.Hash/FileHasher.CLI.Hash.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime linux-arm64 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/linux-arm64-full/

    - name: Publish for osx-x64-full
      run: >
        dotnet publish FileHasher.CLI/FileHasher.CLI.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime osx-x64 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/osx-x64-full/;
        dotnet publish FileHasher.CLI.Check/FileHasher.CLI.Check.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime osx-x64 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/osx-x64-full/;
        dotnet publish FileHasher.CLI.Hash/FileHasher.CLI.Hash.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime osx-x64 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/osx-x64-full/
    
    - name: Publish for osx-arm64-full
      run: >
        dotnet publish FileHasher.CLI/FileHasher.CLI.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime osx-arm64 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/osx-arm64-full/;
        dotnet publish FileHasher.CLI.Check/FileHasher.CLI.Check.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime osx-arm64 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/osx-arm64-full/;
        dotnet publish FileHasher.CLI.Hash/FileHasher.CLI.Hash.csproj --configuration Release /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} --runtime osx-arm64 --self-contained true -p:PublishTrimmed=false -p:IncludeAllContentForSelfExtract=false -p:IncludeNativeLibrariesForSelfExtract=false -p:PublishSingleFile=false --output output/osx-arm64-full/

    - uses: actions/upload-artifact@v4
      name: Upload artifacts for win-x86
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: win-x86
        path: output/win-x86/
        retention-days: 7
        
    - uses: actions/upload-artifact@v4
      name: Upload artifacts for win-x86-gui
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: win-x86-gui
        path: output/win-x86-gui/
        retention-days: 7

    - uses: actions/upload-artifact@v4
      name: Upload artifacts for win-x64
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: win-x64
        path: output/win-x64/
        retention-days: 7

    - uses: actions/upload-artifact@v4
      name: Upload artifacts for win-x64-gui
      with:
        name: win-x64-gui
        path: output/win-x64-gui/
        retention-days: 7

    - uses: actions/upload-artifact@v4
      name: Upload artifacts for win-arm64
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: win-arm64
        path: output/win-arm64/
        retention-days: 7
        
    - uses: actions/upload-artifact@v4
      name: Upload artifacts for win-arm64-gui
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: win-arm64-gui
        path: output/win-arm64-gui/
        retention-days: 7

    - uses: actions/upload-artifact@v4
      name: Upload artifacts for linux-x64
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: linux-x64
        path: output/linux-x64/
        retention-days: 7

    - uses: actions/upload-artifact@v4
      name: Upload artifacts for linux-arm
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: linux-arm
        path: output/linux-arm/
        retention-days: 7

    - uses: actions/upload-artifact@v4
      name: Upload artifacts for linux-arm64
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: linux-arm64
        path: output/linux-arm64/
        retention-days: 7

    - uses: actions/upload-artifact@v4
      name: Upload artifacts for osx-x64
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: osx-x64
        path: output/osx-x64/
        retention-days: 7
        
    - uses: actions/upload-artifact@v4
      name: Upload artifacts for win-x86-full
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: win-x86-full
        path: output/win-x86-full/
        retention-days: 7

    - uses: actions/upload-artifact@v4
      name: Upload artifacts for win-x86-gui-full
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: win-x86-gui-full
        path: output/win-x86-gui-full/
        retention-days: 7

    - uses: actions/upload-artifact@v4
      name: Upload artifacts for win-x64-full
      with:
        name: win-x64-full
        path: output/win-x64-full/
        retention-days: 7

    - uses: actions/upload-artifact@v4
      name: Upload artifacts for win-x64-gui-full
      with:
        name: win-x64-gui-full
        path: output/win-x64-gui-full/
        retention-days: 7

    - uses: actions/upload-artifact@v4
      name: Upload artifacts for win-arm64-full
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: win-arm64-full
        path: output/win-arm64-full/
        retention-days: 7

    - uses: actions/upload-artifact@v4
      name: Upload artifacts for win-arm64-gui-full
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: win-arm64-gui-full
        path: output/win-arm64-gui-full/
        retention-days: 7

    - uses: actions/upload-artifact@v4
      name: Upload artifacts for linux-x64-full
      with:
        name: linux-x64-full
        path: output/linux-x64-full/
        retention-days: 7

    - uses: actions/upload-artifact@v4
      name: Upload artifacts for linux-arm-full
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: linux-arm-full
        path: output/linux-arm-full/
        retention-days: 7

    - uses: actions/upload-artifact@v4
      name: Upload artifacts for linux-arm64-full
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: linux-arm64-full
        path: output/linux-arm64-full/
        retention-days: 7

    - uses: actions/upload-artifact@v4
      name: Upload artifacts for osx-x64-full
      with:
        name: osx-x64-full
        path: output/osx-x64-full/
        retention-days: 7

    - uses: actions/upload-artifact@v4
      name: Upload artifacts for osx-arm64-full
      with:
        name: osx-arm64-full
        path: output/osx-arm64-full/
        retention-days: 7
        
    - name: Zip published files
      if: startsWith(github.ref, 'refs/tags/')
      working-directory: ./output/
      run: for i in *; do [ -d "$i" ] && zip --recurse-paths --move --test "${i%/}.zip" "$i"; done
        
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: output/*.zip
