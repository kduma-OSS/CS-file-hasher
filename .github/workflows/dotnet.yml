# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
    
    # Publish semver tags as releases.
    tags: [ 'v*' ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        fetch-tags: true
      
    - uses: ./.github/actions/prepare
  
    - name: Build
      run: dotnet build --configuration Release --no-restore /p:EnableWindowsTargeting=true /p:Version=${{ env.VERSION }} /p:FileVersion=${{ env.FILE_VERSION }} /p:AssemblyVersion=${{ env.FILE_VERSION }}
      
    - name: Test
      run: dotnet test --no-restore --verbosity normal
  
  build:
    needs: test
    runs-on: ubuntu-latest
    continue-on-error: true

    strategy:
      matrix:
        include:
          - runtime: win-x86
          - runtime: win-x64
          - runtime: win-arm64

          - runtime: linux-x64
          - runtime: linux-arm
          - runtime: linux-arm64

          - runtime: osx-x64
          - runtime: osx-arm64
  
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        fetch-tags: true
      
    - uses: ./.github/actions/prepare
      
    - name: Prepare test directory
      run: mkdir output

    - name: Publish self-contained executables
      uses: ./.github/actions/publish-executables-for-platform
      with:
        runtime: ${{ matrix.runtime }}
        remove_pdb_files: ${{ startsWith(github.ref, 'refs/tags/') && 'true' || 'false' }}
        output_directory: ${{ matrix.runtime }}
        full_build: false

    - name: Publish full executables
      uses: ./.github/actions/publish-executables-for-platform
      with:
        runtime: ${{ matrix.runtime }}
        remove_pdb_files: ${{ startsWith(github.ref, 'refs/tags/') && 'true' || 'false' }}
        output_directory: ${{ matrix.runtime }}-full
        full_build: true

    - name: Publish GUI executable
      if: startsWith(matrix.runtime, 'win-')
      uses: ./.github/actions/publish-executables-for-platform
      with:
        runtime: ${{ matrix.runtime }}
        remove_pdb_files: ${{ startsWith(github.ref, 'refs/tags/') && 'true' || 'false' }}
        output_directory: ${{ matrix.runtime }}-gui
        full_build: false
        build_gui: only

    - name: Publish full executables with GUI
      if: startsWith(matrix.runtime, 'win-')
      uses: ./.github/actions/publish-executables-for-platform
      with:
        runtime: ${{ matrix.runtime }}
        remove_pdb_files: ${{ startsWith(github.ref, 'refs/tags/') && 'true' || 'false' }}
        output_directory: ${{ matrix.runtime }}-gui-full
        full_build: true
        build_gui: true
  
  release:
    needs: build   
    runs-on: ubuntu-latest 

    steps:
    - name: Download all build artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./output

    - name: Zip published files
      working-directory: ./output/
      run: for i in *; do [ -d "$i" ] && zip --recurse-paths --move --test "${i%/}.zip" "$i"; done
        
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: output/*.zip
